Node has the ability to externalize CPU-intensive processing in order to free the event loop by spawning child processes that can communicate seamlessly with their parents.

The child_process module is required for any operation of this sort:

var child = require('child_process');

The exec(command,callback) can be used to to run UNIX commands:

child.exec('ls',function 
(err,stdout,stderr){
    if (err) { err.code);}
    console.log(stdout);
});

This method does not provide any mean of commucating with the parent and gives a buffered output. The spawn() method is an improved version of the first:

var spawn = require('child_process').spawn;
// Create a child process
var child = spawn('tail', 
    ['-f', '/var/log/system.log']);
// "tail" command is run in the argument

Listeners to stdout and stderr streams can be added:

child.stdout.on('data', 
    function (data) {
        console.log(data);});


