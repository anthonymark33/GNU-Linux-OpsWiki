JS isomorphic (or universal) app proved useful especially on user performance.

The server renders the React app to a string and generate the first view of the webapp. The user doesn't have to wait for the js to be fetched before seeing something.

var React = require('react');
ReactApp = React.createFactory(require
              ('../components/ReactApp')); 
module.exports = function(app) { 
  app.get('/', function(req, res){ 
  var reactHtml = 
    React.renderToString(ReactApp({})); 
  res.render('index.ejs',
     {reactOutput: reactHtml});
  }); 
};

Inside index.ejs:

<div id="react-main-mount"> 
  <%- reactOutput %> </div>
<!-- bootstrap the app -->
<script src="/main.js"></script>

On the client side (main.js):

var React = require('react');
var ReactApp = require
    ('./components/ReactApp'); 
var mountNode = document.getElementById(
    "react-main-mount"); 
React.render(new ReactApp({}), mountNode);


